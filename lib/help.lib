#####################################
# help module

show_help() {
cat <<EOF
$(basename ${script_name}) [ option | command | path ]...

Options:
  -h|--help           show this help
  -v|--verbose        give more output
  -s|--show-cmd       show the commands being executed
  -q|--quiet          no output
  -e|--env <e>        add environment <e> to render (can be comma separated list)
  -t|--to <path>      other path to render to (default is tmp/manifests)
  -w|--with <path>    used for comparison between two manifest trees
  -u|--update <expr>  update source files before rendering
Commands
  help          show this _help
EOF
for key in $(printf "%s\n" ${!command_help[@]} | sort); do
  printf "  %-13s %s\n" $key "${command_help[$key]}"
done
cat <<EOF
paths:
  Each path defines an application definition. This can either be a file, that will be sourced,
  or a directory that contains exactly 1 file with a name '*.def'.

Note: options, commands and paths can be mixed freely (but only last command is used, if multiple commands are given)
EOF
}

run_command_aliases() {
echo Aliases:
for key in $(printf "%s\n" ${!aliases[@]} | sort); do
    printf "  %-13s %s\n" $key "${aliases[$key]}"
done |sort -k2 -k1
}
